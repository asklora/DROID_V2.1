# Generated by Django 3.2.5 on 2021-08-20 06:02

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import simple_history.models


class Migration(migrations.Migration):

    dependencies = [
        ('universe', '0004_auto_20210819_0640'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('orders', '0003_positionperformance_status'),
    ]

    operations = [
        migrations.CreateModel(
            name='HistoricalOrderPosition',
            fields=[
                ('created', models.DateTimeField()),
                ('updated', models.DateTimeField(editable=False)),
                ('position_uid', models.CharField(db_index=True, editable=False, max_length=500)),
                ('bot_id', models.CharField(blank=True, max_length=255, null=True)),
                ('expiry', models.DateField(blank=True, null=True)),
                ('spot_date', models.DateField(blank=True, null=True)),
                ('entry_price', models.FloatField(blank=True, null=True)),
                ('investment_amount', models.FloatField(default=0)),
                ('max_loss_pct', models.FloatField(blank=True, null=True)),
                ('max_loss_price', models.FloatField(blank=True, null=True)),
                ('max_loss_amount', models.FloatField(blank=True, null=True)),
                ('target_profit_pct', models.FloatField(blank=True, null=True)),
                ('target_profit_price', models.FloatField(blank=True, null=True)),
                ('target_profit_amount', models.FloatField(blank=True, null=True)),
                ('bot_cash_balance', models.FloatField(blank=True, null=True)),
                ('event', models.CharField(blank=True, max_length=75, null=True)),
                ('event_date', models.DateField(blank=True, null=True)),
                ('final_price', models.FloatField(blank=True, null=True)),
                ('final_return', models.FloatField(blank=True, null=True)),
                ('final_pnl_amount', models.FloatField(blank=True, null=True)),
                ('current_inv_ret', models.FloatField(blank=True, null=True)),
                ('current_inv_amt', models.FloatField(blank=True, null=True)),
                ('is_live', models.BooleanField(default=False)),
                ('share_num', models.FloatField(blank=True, null=True)),
                ('current_returns', models.FloatField(blank=True, default=0, null=True)),
                ('current_values', models.FloatField(blank=True, default=0, null=True)),
                ('commision_fee', models.FloatField(blank=True, default=0, null=True)),
                ('commision_fee_sell', models.FloatField(blank=True, default=0, null=True)),
                ('vol', models.FloatField(blank=True, null=True)),
                ('margin', models.FloatField(default=1)),
                ('bot_cash_dividend', models.FloatField(blank=True, default=0, null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('ticker', models.ForeignKey(blank=True, db_column='ticker', db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='universe.universe')),
                ('user_id', models.ForeignKey(blank=True, db_column='user_id', db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical order position',
                'db_table': 'order_position_history',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
    ]
