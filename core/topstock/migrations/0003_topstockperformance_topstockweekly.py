# Generated by Django 3.1.4 on 2021-02-08 10:32

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('Clients', '0007_auto_20210202_0940'),
        ('universe', '0012_universerating_updated'),
        ('topstock', '0002_auto_20210208_1031'),
    ]

    operations = [
        migrations.CreateModel(
            name='TopStockWeekly',
            fields=[
                ('uid', models.CharField(editable=False, max_length=200, primary_key=True, serialize=False, unique=True)),
                ('created', models.DateField(blank=True, null=True)),
                ('spot_date', models.DateField(blank=True, null=True)),
                ('forward_date', models.DateField(blank=True, null=True)),
                ('rank', models.IntegerField(blank=True, null=True)),
                ('types', models.CharField(blank=True, max_length=50, null=True)),
                ('prediction_period', models.CharField(blank=True, max_length=200, null=True)),
                ('spot_price', models.FloatField(blank=True, null=True)),
                ('spot_tri', models.FloatField(blank=True, null=True)),
                ('forward_tri', models.FloatField(blank=True, null=True)),
                ('forward_return', models.FloatField(blank=True, null=True, verbose_name='absolute_return')),
                ('index_forward_return', models.FloatField(blank=True, null=True, verbose_name='ewportperfomance')),
                ('index_spot_price', models.FloatField(blank=True, null=True)),
                ('index_forward_price', models.FloatField(blank=True, null=True)),
                ('client_id', models.ForeignKey(db_column='client_id', on_delete=django.db.models.deletion.CASCADE, related_name='top_stock_weekly_client_id', to='Clients.client')),
                ('currency_code', models.ForeignKey(db_column='currency_code', on_delete=django.db.models.deletion.CASCADE, related_name='top_stock_weekly_currency_code', to='universe.currency')),
                ('subinterval', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='top_stock_weekly_subinterval', to='topstock.subinterval')),
                ('ticker', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='top_stock_weekly_ticker', to='universe.universe')),
            ],
            options={
                'db_table': 'top_stock_weekly',
            },
        ),
        migrations.CreateModel(
            name='TopStockPerformance',
            fields=[
                ('uid', models.CharField(editable=False, max_length=200, primary_key=True, serialize=False, unique=True)),
                ('types', models.CharField(blank=True, max_length=200, null=True)),
                ('spot_date', models.DateField(blank=True, null=True)),
                ('forward_date', models.DateField(blank=True, null=True)),
                ('index_spot_price', models.FloatField(blank=True, null=True)),
                ('index_forward_price', models.FloatField(blank=True, null=True)),
                ('index_forward_return', models.FloatField(blank=True, null=True)),
                ('wts_tri', models.FloatField(blank=True, null=True)),
                ('index_tri', models.FloatField(blank=True, null=True)),
                ('average_forward_return', models.FloatField(blank=True, null=True)),
                ('week_status', models.CharField(blank=True, max_length=200, null=True)),
                ('client_id', models.ForeignKey(db_column='client_id', on_delete=django.db.models.deletion.CASCADE, related_name='top_stock_performance_client_id', to='Clients.client')),
                ('currency_code', models.ForeignKey(db_column='currency_code', on_delete=django.db.models.deletion.CASCADE, related_name='top_stock_performance_currency_code', to='universe.currency')),
                ('subinterval', models.ForeignKey(db_column='subinterval', on_delete=django.db.models.deletion.CASCADE, related_name='top_stock_performance_subinterval', to='topstock.subinterval')),
            ],
            options={
                'db_table': 'top_stock_performance',
            },
        ),
    ]
