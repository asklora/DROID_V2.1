# Generated by Django 3.1.4 on 2021-07-15 06:15

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('universe', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='DataFundamentalScore',
            fields=[
                ('ticker', models.OneToOneField(db_column='ticker', on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='data_fundamental_score_ticker', serialize=False, to='universe.universe')),
                ('eps', models.FloatField(blank=True, null=True)),
                ('bps', models.FloatField(blank=True, null=True)),
                ('ev', models.FloatField(blank=True, null=True)),
                ('ttm_rev', models.FloatField(blank=True, null=True)),
                ('mkt_cap', models.FloatField(blank=True, null=True)),
                ('ttm_ebitda', models.FloatField(blank=True, null=True)),
                ('ttm_capex', models.FloatField(blank=True, null=True)),
                ('net_debt', models.FloatField(blank=True, null=True)),
                ('roe', models.FloatField(blank=True, null=True)),
                ('cfps', models.FloatField(blank=True, null=True)),
                ('peg', models.FloatField(blank=True, null=True)),
                ('bps1fd12', models.FloatField(blank=True, null=True)),
                ('ebd1fd12', models.FloatField(blank=True, null=True)),
                ('evt1fd12', models.FloatField(blank=True, null=True)),
                ('eps1fd12', models.FloatField(blank=True, null=True)),
                ('sal1fd12', models.FloatField(blank=True, null=True)),
                ('cap1fd12', models.FloatField(blank=True, null=True)),
                ('environment', models.FloatField(blank=True, null=True)),
                ('social', models.FloatField(blank=True, null=True)),
                ('goverment', models.FloatField(blank=True, null=True)),
            ],
            options={
                'db_table': 'data_fundamental_score',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='DataSplit',
            fields=[
                ('ticker', models.OneToOneField(db_column='ticker', on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='data_split_ticker', serialize=False, to='universe.universe')),
                ('data_type', models.TextField(blank=True, null=True)),
                ('intraday_date', models.DateField(blank=True, null=True)),
                ('capital_change', models.FloatField(blank=True, null=True)),
                ('price', models.FloatField(blank=True, null=True)),
                ('percent_change', models.FloatField(blank=True, null=True)),
            ],
            options={
                'db_table': 'data_split',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Fred',
            fields=[
                ('trading_day', models.DateField(primary_key=True, serialize=False)),
                ('data', models.FloatField(blank=True, null=True)),
            ],
            options={
                'db_table': 'data_fred',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='LatestPrice',
            fields=[
                ('ticker', models.OneToOneField(db_column='ticker', on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='latest_price_ticker', serialize=False, to='universe.universe')),
                ('classic_vol', models.FloatField(blank=True, null=True)),
                ('open', models.FloatField(blank=True, null=True)),
                ('high', models.FloatField(blank=True, null=True)),
                ('low', models.FloatField(blank=True, null=True)),
                ('close', models.FloatField(blank=True, null=True)),
                ('intraday_date', models.DateField(blank=True, null=True)),
                ('intraday_ask', models.FloatField(blank=True, null=True)),
                ('intraday_bid', models.FloatField(blank=True, null=True)),
                ('latest_price_change', models.FloatField(blank=True, null=True)),
                ('intraday_time', models.TextField(blank=True, null=True)),
                ('last_date', models.DateField(blank=True, null=True)),
                ('capital_change', models.FloatField(blank=True, null=True)),
                ('volume', models.FloatField(blank=True, null=True)),
                ('latest_price', models.FloatField(blank=True, null=True)),
            ],
            options={
                'db_table': 'latest_price',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Macro',
            fields=[
                ('period_end', models.DateField(primary_key=True, serialize=False)),
                ('chgdp', models.FloatField(blank=True, null=True)),
                ('jpgdp', models.FloatField(blank=True, null=True)),
                ('usgdp', models.FloatField(blank=True, null=True)),
                ('emgdp', models.FloatField(blank=True, null=True)),
                ('emibor3', models.FloatField(blank=True, null=True)),
                ('emgbond', models.FloatField(blank=True, null=True)),
                ('chgbond', models.FloatField(blank=True, null=True)),
                ('usinter3', models.FloatField(blank=True, null=True)),
                ('usgbill3', models.FloatField(blank=True, null=True)),
                ('jpmshort', models.FloatField(blank=True, null=True)),
                ('fred_data', models.FloatField(blank=True, null=True)),
            ],
            options={
                'db_table': 'data_macro',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='MacroMonthly',
            fields=[
                ('trading_day', models.DateField(primary_key=True, serialize=False)),
                ('period_end', models.DateField(blank=True, null=True)),
                ('chgdp', models.FloatField(blank=True, null=True)),
                ('jpgdp', models.FloatField(blank=True, null=True)),
                ('usgdp', models.FloatField(blank=True, null=True)),
                ('emgdp', models.FloatField(blank=True, null=True)),
                ('emibor3', models.FloatField(blank=True, null=True)),
                ('emgbond', models.FloatField(blank=True, null=True)),
                ('chgbond', models.FloatField(blank=True, null=True)),
                ('usinter3', models.FloatField(blank=True, null=True)),
                ('usgbill3', models.FloatField(blank=True, null=True)),
                ('jpmshort', models.FloatField(blank=True, null=True)),
                ('fred_data', models.FloatField(blank=True, null=True)),
            ],
            options={
                'db_table': 'data_macro_monthly',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='ReportDatapoint',
            fields=[
                ('ticker', models.OneToOneField(db_column='ticker', on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='dss_datapoint_ticker', serialize=False, to='universe.universe')),
                ('datapoint', models.IntegerField(blank=True, null=True)),
                ('updated', models.DateField(blank=True, null=True)),
                ('reingested', models.BooleanField(default=False)),
            ],
            options={
                'db_table': 'report_datapoint',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='WorldscopeSummary',
            fields=[
                ('uid', models.TextField(primary_key=True, serialize=False)),
                ('worldscope_identifier', models.TextField(blank=True, null=True)),
                ('year', models.IntegerField(blank=True, null=True)),
                ('frequency_number', models.IntegerField(blank=True, null=True)),
                ('fiscal_quarter_end', models.IntegerField(blank=True, null=True)),
                ('period_end', models.DateField(blank=True, null=True)),
                ('report_date', models.DateField(blank=True, null=True)),
                ('fn_2001', models.FloatField(blank=True, null=True)),
                ('fn_2101', models.FloatField(blank=True, null=True)),
                ('fn_2201', models.FloatField(blank=True, null=True)),
                ('fn_2501', models.FloatField(blank=True, null=True)),
                ('fn_3101', models.FloatField(blank=True, null=True)),
                ('fn_5085', models.FloatField(blank=True, null=True)),
                ('fn_8001', models.FloatField(blank=True, null=True)),
                ('fn_18100', models.FloatField(blank=True, null=True)),
                ('fn_18158', models.FloatField(blank=True, null=True)),
                ('fn_18199', models.FloatField(blank=True, null=True)),
                ('fn_18262', models.FloatField(blank=True, null=True)),
                ('fn_18263', models.FloatField(blank=True, null=True)),
                ('fn_18264', models.FloatField(blank=True, null=True)),
                ('fn_18265', models.FloatField(blank=True, null=True)),
                ('fn_18266', models.FloatField(blank=True, null=True)),
                ('fn_18267', models.FloatField(blank=True, null=True)),
                ('fn_18269', models.FloatField(blank=True, null=True)),
                ('fn_18304', models.FloatField(blank=True, null=True)),
                ('fn_18308', models.FloatField(blank=True, null=True)),
                ('fn_18309', models.FloatField(blank=True, null=True)),
                ('fn_18310', models.FloatField(blank=True, null=True)),
                ('fn_18311', models.FloatField(blank=True, null=True)),
                ('fn_18312', models.FloatField(blank=True, null=True)),
                ('fn_18313', models.FloatField(blank=True, null=True)),
                ('fn_3501', models.FloatField(blank=True, null=True)),
                ('fn_3255', models.FloatField(blank=True, null=True)),
                ('fn_18271', models.FloatField(blank=True, null=True)),
                ('fn_2999', models.FloatField(blank=True, null=True)),
                ('fn_5192', models.FloatField(blank=True, null=True)),
                ('fn_5575', models.FloatField(blank=True, null=True)),
                ('ticker', models.ForeignKey(db_column='ticker', on_delete=django.db.models.deletion.CASCADE, related_name='data_worldscope_summary_ticker', to='universe.universe')),
            ],
            options={
                'db_table': 'data_worldscope_summary',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='MasterTac',
            fields=[
                ('uid', models.CharField(max_length=30, primary_key=True, serialize=False)),
                ('trading_day', models.DateField(blank=True, null=True)),
                ('volume', models.FloatField(blank=True, null=True)),
                ('total_return_index', models.FloatField(blank=True, null=True)),
                ('tri_adj_open', models.FloatField(blank=True, null=True)),
                ('tri_adj_high', models.FloatField(blank=True, null=True)),
                ('tri_adj_low', models.FloatField(blank=True, null=True)),
                ('tri_adj_close', models.FloatField(blank=True, null=True)),
                ('rsi', models.FloatField(blank=True, null=True)),
                ('fast_k', models.FloatField(blank=True, null=True)),
                ('fast_d', models.FloatField(blank=True, null=True)),
                ('day_status', models.TextField(blank=True, null=True)),
                ('currency_code', models.ForeignKey(db_column='currency_code', on_delete=django.db.models.deletion.CASCADE, related_name='master_tac_currency_code', to='universe.currency')),
                ('ticker', models.ForeignKey(db_column='ticker', on_delete=django.db.models.deletion.CASCADE, related_name='master_tac_ticker', to='universe.universe')),
            ],
            options={
                'db_table': 'master_tac',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='MasterOhlcvtr',
            fields=[
                ('uid', models.CharField(max_length=30, primary_key=True, serialize=False)),
                ('trading_day', models.DateField(blank=True, null=True)),
                ('open', models.FloatField(blank=True, null=True)),
                ('high', models.FloatField(blank=True, null=True)),
                ('low', models.FloatField(blank=True, null=True)),
                ('close', models.FloatField(blank=True, null=True)),
                ('volume', models.FloatField(blank=True, null=True)),
                ('total_return_index', models.FloatField(blank=True, null=True)),
                ('day_status', models.TextField(blank=True, null=True)),
                ('datapoint', models.IntegerField(blank=True, null=True)),
                ('datapoint_per_day', models.IntegerField(blank=True, null=True)),
                ('currency_code', models.ForeignKey(db_column='currency_code', on_delete=django.db.models.deletion.CASCADE, related_name='master_ohlcvtr_currency_code', to='universe.currency')),
                ('ticker', models.ForeignKey(db_column='ticker', on_delete=django.db.models.deletion.CASCADE, related_name='master_ohlcvtr_ticker', to='universe.universe')),
            ],
            options={
                'db_table': 'master_ohlcvtr',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='MasterMultiple',
            fields=[
                ('uid', models.CharField(max_length=30, primary_key=True, serialize=False)),
                ('trading_day', models.DateField(blank=True, null=True)),
                ('open_multiple', models.FloatField(blank=True, null=True)),
                ('high_multiple', models.FloatField(blank=True, null=True)),
                ('low_multiple', models.FloatField(blank=True, null=True)),
                ('close_multiple', models.FloatField(blank=True, null=True)),
                ('volume_adj', models.FloatField(blank=True, null=True)),
                ('turn_over', models.FloatField(blank=True, null=True)),
                ('tri', models.FloatField(blank=True, null=True)),
                ('ticker', models.ForeignKey(db_column='ticker', on_delete=django.db.models.deletion.CASCADE, related_name='master_multiple_ticker', to='universe.universe')),
            ],
            options={
                'db_table': 'master_multiple',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='IbesMonthly',
            fields=[
                ('uid', models.TextField(primary_key=True, serialize=False)),
                ('trading_day', models.DateField(blank=True, null=True)),
                ('period_end', models.DateField(blank=True, null=True)),
                ('eps1fd12', models.FloatField(blank=True, null=True)),
                ('eps1tr12', models.FloatField(blank=True, null=True)),
                ('cap1fd12', models.FloatField(blank=True, null=True)),
                ('epsi1md', models.FloatField(blank=True, null=True)),
                ('i0eps', models.FloatField(blank=True, null=True)),
                ('ebd1fd12', models.FloatField(blank=True, null=True)),
                ('ticker', models.ForeignKey(db_column='ticker', on_delete=django.db.models.deletion.CASCADE, related_name='data_ibes_monthly_ticker', to='universe.universe')),
            ],
            options={
                'db_table': 'data_ibes_monthly',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Ibes',
            fields=[
                ('uid', models.TextField(primary_key=True, serialize=False)),
                ('period_end', models.DateField(blank=True, null=True)),
                ('epsi1md', models.FloatField(blank=True, null=True)),
                ('i0eps', models.FloatField(blank=True, null=True)),
                ('cap1fd12', models.FloatField(blank=True, null=True)),
                ('ebd1fd12', models.FloatField(blank=True, null=True)),
                ('eps1fd12', models.FloatField(blank=True, null=True)),
                ('eps1tr12', models.FloatField(blank=True, null=True)),
                ('ticker', models.ForeignKey(db_column='ticker', on_delete=django.db.models.deletion.CASCADE, related_name='data_ibes_ticker', to='universe.universe')),
            ],
            options={
                'db_table': 'data_ibes',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='DataVix',
            fields=[
                ('uid', models.TextField(primary_key=True, serialize=False)),
                ('trading_day', models.DateField(blank=True, null=True)),
                ('vix_value', models.FloatField(blank=True, null=True)),
                ('vix_id', models.ForeignKey(db_column='vix_id', on_delete=django.db.models.deletion.CASCADE, related_name='data_vix_vix_id', to='universe.vix')),
            ],
            options={
                'db_table': 'data_vix',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='DataQuandl',
            fields=[
                ('uid', models.TextField(primary_key=True, serialize=False)),
                ('trading_day', models.DateField(blank=True, null=True)),
                ('stockpx', models.FloatField(blank=True, null=True)),
                ('iv30', models.FloatField(blank=True, null=True)),
                ('iv60', models.FloatField(blank=True, null=True)),
                ('iv90', models.FloatField(blank=True, null=True)),
                ('m1atmiv', models.FloatField(blank=True, null=True)),
                ('m1dtex', models.FloatField(blank=True, null=True)),
                ('m2atmiv', models.FloatField(blank=True, null=True)),
                ('m2dtex', models.FloatField(blank=True, null=True)),
                ('m3atmiv', models.FloatField(blank=True, null=True)),
                ('m3dtex', models.FloatField(blank=True, null=True)),
                ('m4atmiv', models.FloatField(blank=True, null=True)),
                ('m4dtex', models.FloatField(blank=True, null=True)),
                ('slope', models.FloatField(blank=True, null=True)),
                ('deriv', models.FloatField(blank=True, null=True)),
                ('slope_inf', models.FloatField(blank=True, null=True)),
                ('deriv_inf', models.FloatField(blank=True, null=True)),
                ('ticker', models.ForeignKey(db_column='ticker', on_delete=django.db.models.deletion.CASCADE, related_name='data_quandl_ticker', to='universe.universe')),
            ],
            options={
                'db_table': 'data_quandl',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='DataInterestDailyRates',
            fields=[
                ('uid', models.TextField(primary_key=True, serialize=False)),
                ('r', models.FloatField(blank=True, null=True)),
                ('t', models.IntegerField(blank=True, null=True)),
                ('currency_code', models.ForeignKey(db_column='currency_code', on_delete=django.db.models.deletion.CASCADE, related_name='data_interest_daily_rates_currency_code', to='universe.currency')),
            ],
            options={
                'db_table': 'data_interest_daily_rates',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='DataInterest',
            fields=[
                ('ticker_interest', models.TextField(primary_key=True, serialize=False)),
                ('rate', models.FloatField(blank=True, null=True)),
                ('raw_data', models.FloatField(blank=True, null=True)),
                ('days_to_maturity', models.IntegerField(blank=True, null=True)),
                ('ingestion_field', models.TextField(blank=True, null=True)),
                ('maturity', models.DateField(blank=True, null=True)),
                ('updated', models.DateField(blank=True, null=True)),
                ('currency_code', models.ForeignKey(db_column='currency_code', on_delete=django.db.models.deletion.CASCADE, related_name='data_interest_currency_code', to='universe.currency')),
            ],
            options={
                'db_table': 'data_interest',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='DataDsws',
            fields=[
                ('dsws_id', models.CharField(max_length=30, primary_key=True, serialize=False)),
                ('trading_day', models.DateField()),
                ('total_return_index', models.FloatField(blank=True, null=True)),
                ('ticker', models.ForeignKey(db_column='ticker', on_delete=django.db.models.deletion.CASCADE, related_name='data_dsws_ticker', to='universe.universe')),
            ],
            options={
                'db_table': 'data_dsws',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='DataDss',
            fields=[
                ('dss_id', models.CharField(max_length=30, primary_key=True, serialize=False)),
                ('trading_day', models.DateField()),
                ('open', models.FloatField(blank=True, null=True)),
                ('high', models.FloatField(blank=True, null=True)),
                ('low', models.FloatField(blank=True, null=True)),
                ('close', models.FloatField(blank=True, null=True)),
                ('volume', models.FloatField(blank=True, null=True)),
                ('ticker', models.ForeignKey(db_column='ticker', on_delete=django.db.models.deletion.CASCADE, related_name='data_dss_ticker', to='universe.universe')),
            ],
            options={
                'db_table': 'data_dss',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='DataDividendDailyRates',
            fields=[
                ('uid', models.TextField(primary_key=True, serialize=False)),
                ('q', models.FloatField(blank=True, null=True)),
                ('t', models.IntegerField(blank=True, null=True)),
                ('spot_date', models.DateField(blank=True, null=True)),
                ('expiry_date', models.DateField(blank=True, null=True)),
                ('currency_code', models.ForeignKey(db_column='currency_code', on_delete=django.db.models.deletion.CASCADE, related_name='data_dividend_daily_rates_currency_code', to='universe.currency')),
                ('ticker', models.ForeignKey(db_column='ticker', on_delete=django.db.models.deletion.CASCADE, related_name='data_dividend_daily_rates_ticker', to='universe.universe')),
            ],
            options={
                'db_table': 'data_dividend_daily_rates',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='DataDividend',
            fields=[
                ('uid', models.TextField(primary_key=True, serialize=False)),
                ('ex_dividend_date', models.DateField(blank=True, null=True)),
                ('amount', models.FloatField(blank=True, null=True)),
                ('ticker', models.ForeignKey(db_column='ticker', on_delete=django.db.models.deletion.CASCADE, related_name='data_dividend_ticker', to='universe.universe')),
            ],
            options={
                'db_table': 'data_dividend',
                'managed': True,
            },
        ),
        migrations.AddIndex(
            model_name='masterohlcvtr',
            index=models.Index(fields=['ticker', 'currency_code'], name='master_ohlc_ticker_10f263_idx'),
        ),
    ]
